const e=JSON.parse('{"key":"v-4138fccc","path":"/knowledge-block/star/static-proxy-and-dynamic-proxy.html","title":"静态代理和动态代理","lang":"zh-CN","frontmatter":{"title":"静态代理和动态代理","icon":"circle-info","order":6,"category":["Knowledge"],"tag":["Knowledge"],"pageview":false,"date":"2023-09-06T00:00:00.000Z","comment":false,"breadcrumb":false,"description":"在了解静态代理和动态代理之前，我们需要先了解一下什么是代理模式 1. 代理模式 代理模式是一种比较好理解的设计模式。简单来说就是 我们使用代理对象来代替对真实对象(real object)的访问，这样就可以在不修改原目标对象的前提下，提供额外的功能操作，扩展目标对象的功能。 代理模式的主要作用是扩展目标对象的功能，比如说在目标对象的某个方法执行前后你可...","head":[["meta",{"property":"og:url","content":"https://manamn.space/toLeoJavaer/knowledge-block/star/static-proxy-and-dynamic-proxy.html"}],["meta",{"property":"og:site_name","content":"ToLeoJavaer"}],["meta",{"property":"og:title","content":"静态代理和动态代理"}],["meta",{"property":"og:description","content":"在了解静态代理和动态代理之前，我们需要先了解一下什么是代理模式 1. 代理模式 代理模式是一种比较好理解的设计模式。简单来说就是 我们使用代理对象来代替对真实对象(real object)的访问，这样就可以在不修改原目标对象的前提下，提供额外的功能操作，扩展目标对象的功能。 代理模式的主要作用是扩展目标对象的功能，比如说在目标对象的某个方法执行前后你可..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-03T11:52:46.000Z"}],["meta",{"property":"article:author","content":"Leo"}],["meta",{"property":"article:tag","content":"Knowledge"}],["meta",{"property":"article:published_time","content":"2023-09-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-03T11:52:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"静态代理和动态代理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-03T11:52:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Leo\\",\\"url\\":\\"https://manamn.space/\\"}]}"]]},"headers":[{"level":2,"title":"1. 代理模式","slug":"_1-代理模式","link":"#_1-代理模式","children":[]},{"level":2,"title":"2.静态代理","slug":"_2-静态代理","link":"#_2-静态代理","children":[{"level":3,"title":"静态代理存在的问题","slug":"静态代理存在的问题","link":"#静态代理存在的问题","children":[]}]},{"level":2,"title":"3. 动态代理","slug":"_3-动态代理","link":"#_3-动态代理","children":[{"level":3,"title":"3.1 JDK动态代理","slug":"_3-1-jdk动态代理","link":"#_3-1-jdk动态代理","children":[]},{"level":3,"title":"3.2 CGlib动态代理","slug":"_3-2-cglib动态代理","link":"#_3-2-cglib动态代理","children":[]},{"level":3,"title":"3.3  JDK 动态代理和 CGLIB 动态代理对比","slug":"_3-3-jdk-动态代理和-cglib-动态代理对比","link":"#_3-3-jdk-动态代理和-cglib-动态代理对比","children":[]}]},{"level":2,"title":"4. 静态代理和动态代理的对比","slug":"_4-静态代理和动态代理的对比","link":"#_4-静态代理和动态代理的对比","children":[]}],"git":{"createdTime":1700057903000,"updatedTime":1701604366000,"contributors":[{"name":"gaoziman","email":"2942894660@qq.com","commits":1},{"name":"“gaoziman”","email":"“2942894660@qq.com”","commits":1}]},"readingTime":{"minutes":11.27,"words":3381},"filePathRelative":"knowledge-block/star/static-proxy-and-dynamic-proxy.md","localizedDate":"2023年9月6日","copyright":{"author":"LeoJavaer(toleojavaer.cn)","license":"MIT"},"autoDesc":true}');export{e as data};
