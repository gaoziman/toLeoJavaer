const e=JSON.parse('{"key":"v-14c1da48","path":"/Java/basic/java-multithread-detail.html","title":"Java基础篇 多线程详解","lang":"zh-CN","frontmatter":{"title":"Java基础篇 多线程详解","icon":"circle-info","order":6,"category":["Java☕"],"tag":["Java☕"],"pageview":false,"date":"2023-11-05T23:10:30.000Z","comment":false,"breadcrumb":false,"description":"思维导图 1.前言\\r 大家好，我是Leo哥🫣🫣🫣，在Java的开发中，处处都会用到多线程，现在开发大多都会使用到Spring的框架，里面就封装了很多多线程相关的代码，只是我们在平时的开发中感受不到,比如tomcat的连接池就使用到了线程池技术，所以了解Java多线程是学习Java至关重要的一步！好了，话不多说让我们开始吧😎😎😎。 2.相关概...","head":[["meta",{"property":"og:url","content":"https://manamn.space/toLeoJavaer/Java/basic/java-multithread-detail.html"}],["meta",{"property":"og:site_name","content":"ToLeoJavaer"}],["meta",{"property":"og:title","content":"Java基础篇 多线程详解"}],["meta",{"property":"og:description","content":"思维导图 1.前言\\r 大家好，我是Leo哥🫣🫣🫣，在Java的开发中，处处都会用到多线程，现在开发大多都会使用到Spring的框架，里面就封装了很多多线程相关的代码，只是我们在平时的开发中感受不到,比如tomcat的连接池就使用到了线程池技术，所以了解Java多线程是学习Java至关重要的一步！好了，话不多说让我们开始吧😎😎😎。 2.相关概..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-05T08:04:01.000Z"}],["meta",{"property":"article:author","content":"Leo"}],["meta",{"property":"article:tag","content":"Java☕"}],["meta",{"property":"article:published_time","content":"2023-11-05T23:10:30.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-05T08:04:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java基础篇 多线程详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-05T23:10:30.000Z\\",\\"dateModified\\":\\"2024-04-05T08:04:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Leo\\",\\"url\\":\\"https://manamn.space/\\"}]}"]]},"headers":[{"level":2,"title":"1.前言","slug":"_1-前言","link":"#_1-前言","children":[]},{"level":2,"title":"2.相关概念","slug":"_2-相关概念","link":"#_2-相关概念","children":[{"level":3,"title":"2.1进程(Process)","slug":"_2-1进程-process","link":"#_2-1进程-process","children":[]},{"level":3,"title":"2.2线程(Thread)","slug":"_2-2线程-thread","link":"#_2-2线程-thread","children":[]},{"level":3,"title":"2.3并行和并发的理解","slug":"_2-3并行和并发的理解","link":"#_2-3并行和并发的理解","children":[]}]},{"level":2,"title":"3.背景","slug":"_3-背景","link":"#_3-背景","children":[{"level":3,"title":"3.1为什么要使用多线程","slug":"_3-1为什么要使用多线程","link":"#_3-1为什么要使用多线程","children":[]},{"level":3,"title":"3.2多线程的好处","slug":"_3-2多线程的好处","link":"#_3-2多线程的好处","children":[]}]},{"level":2,"title":"4.实现多线程的几种方式以及方法应用","slug":"_4-实现多线程的几种方式以及方法应用","link":"#_4-实现多线程的几种方式以及方法应用","children":[{"level":3,"title":"4.1继承Thread类","slug":"_4-1继承thread类","link":"#_4-1继承thread类","children":[]},{"level":3,"title":"4.2实现Runnable接口","slug":"_4-2实现runnable接口","link":"#_4-2实现runnable接口","children":[]},{"level":3,"title":"4.3实现Callable接口","slug":"_4-3实现callable接口","link":"#_4-3实现callable接口","children":[]},{"level":3,"title":"4.4设置和获取线程名称","slug":"_4-4设置和获取线程名称","link":"#_4-4设置和获取线程名称","children":[]},{"level":3,"title":"4.5线程休眠","slug":"_4-5线程休眠","link":"#_4-5线程休眠","children":[]},{"level":3,"title":"4.6线程优先级","slug":"_4-6线程优先级","link":"#_4-6线程优先级","children":[]},{"level":3,"title":"4.7守护线程","slug":"_4-7守护线程","link":"#_4-7守护线程","children":[]}]},{"level":2,"title":"5.线程同步","slug":"_5-线程同步","link":"#_5-线程同步","children":[{"level":3,"title":"5.1卖票","slug":"_5-1卖票","link":"#_5-1卖票","children":[]},{"level":3,"title":"5.2卖票案例的问题","slug":"_5-2卖票案例的问题","link":"#_5-2卖票案例的问题","children":[]},{"level":3,"title":"5.3同步代码块解决数据安全问题","slug":"_5-3同步代码块解决数据安全问题","link":"#_5-3同步代码块解决数据安全问题","children":[]},{"level":3,"title":"5.4同步方法解决数据安全问题","slug":"_5-4同步方法解决数据安全问题","link":"#_5-4同步方法解决数据安全问题","children":[]},{"level":3,"title":"5.5Lock锁","slug":"_5-5lock锁","link":"#_5-5lock锁","children":[]},{"level":3,"title":"5.6死锁","slug":"_5-6死锁","link":"#_5-6死锁","children":[]},{"level":3,"title":"5.7线程同步的多种方式","slug":"_5-7线程同步的多种方式","link":"#_5-7线程同步的多种方式","children":[]},{"level":3,"title":"5.8Lock锁和synchronized同步锁的区别","slug":"_5-8lock锁和synchronized同步锁的区别","link":"#_5-8lock锁和synchronized同步锁的区别","children":[]}]},{"level":2,"title":"6.生产者与消费者案例","slug":"_6-生产者与消费者案例","link":"#_6-生产者与消费者案例","children":[{"level":3,"title":"3.1生产者和消费者模式概述","slug":"_3-1生产者和消费者模式概述","link":"#_3-1生产者和消费者模式概述","children":[]},{"level":3,"title":"3.2生产者和消费者案例","slug":"_3-2生产者和消费者案例","link":"#_3-2生产者和消费者案例","children":[]},{"level":3,"title":"3.3生产者和消费者案例优化","slug":"_3-3生产者和消费者案例优化","link":"#_3-3生产者和消费者案例优化","children":[]},{"level":3,"title":"3.4阻塞队列基本使用","slug":"_3-4阻塞队列基本使用","link":"#_3-4阻塞队列基本使用","children":[]},{"level":3,"title":"3.5阻塞队列实现等待唤醒机制","slug":"_3-5阻塞队列实现等待唤醒机制","link":"#_3-5阻塞队列实现等待唤醒机制","children":[]}]},{"level":2,"title":"7.使用多线程引入的问题","slug":"_7-使用多线程引入的问题","link":"#_7-使用多线程引入的问题","children":[{"level":3,"title":"1.线程安全问题","slug":"_1-线程安全问题","link":"#_1-线程安全问题","children":[]},{"level":3,"title":"3.线程死锁","slug":"_3-线程死锁","link":"#_3-线程死锁","children":[]},{"level":3,"title":"3.上下文切换","slug":"_3-上下文切换","link":"#_3-上下文切换","children":[]}]},{"level":2,"title":"8.Java线程池","slug":"_8-java线程池","link":"#_8-java线程池","children":[]},{"level":2,"title":"9.参考文献","slug":"_9-参考文献","link":"#_9-参考文献","children":[]},{"level":2,"title":"10.总结","slug":"_10-总结","link":"#_10-总结","children":[]}],"git":{"createdTime":1712304241000,"updatedTime":1712304241000,"contributors":[{"name":"gaoziman","email":"2942894660@qq.com","commits":1}]},"readingTime":{"minutes":41.59,"words":12476},"filePathRelative":"Java/basic/java-multithread-detail.md","localizedDate":"2023年11月6日","copyright":{"author":"LeoJavaer(toleojavaer.cn)","license":"MIT"},"autoDesc":true}');export{e as data};
