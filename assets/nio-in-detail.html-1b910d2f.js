const e=JSON.parse('{"key":"v-72ab2e0b","path":"/distributed/netty/nio-in-detail.html","title":"Netty实战专栏 NIO详解","lang":"zh-CN","frontmatter":{"title":"Netty实战专栏 NIO详解","icon":"circle-info","order":3,"tag":["Netty"],"category":["Netty"],"pageview":false,"date":"2023-11-19T23:50:30.000Z","comment":false,"description":"1.前言 大家好，我是Leo哥🫣🫣🫣，上一篇博客我们主要大致了解了一下Java中IO的演变历程，大体分为基础IO-->BIO-->NIO-->AIO这几个阶段，分部逐层递进。下面几个章节我们就要来聊聊这个变化。本节主要讨论关于NIO的知识。好了，话不多说让我们开始吧😎😎😎。 2.为什么会有NIO NIO是为了弥补IO操作的不足而诞生的，NI...","head":[["meta",{"property":"og:url","content":"https://manamn.space/toLeoJavaer/distributed/netty/nio-in-detail.html"}],["meta",{"property":"og:site_name","content":"ToLeoJavaer"}],["meta",{"property":"og:title","content":"Netty实战专栏 NIO详解"}],["meta",{"property":"og:description","content":"1.前言 大家好，我是Leo哥🫣🫣🫣，上一篇博客我们主要大致了解了一下Java中IO的演变历程，大体分为基础IO-->BIO-->NIO-->AIO这几个阶段，分部逐层递进。下面几个章节我们就要来聊聊这个变化。本节主要讨论关于NIO的知识。好了，话不多说让我们开始吧😎😎😎。 2.为什么会有NIO NIO是为了弥补IO操作的不足而诞生的，NI..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-03T12:20:33.000Z"}],["meta",{"property":"article:author","content":"Leo"}],["meta",{"property":"article:tag","content":"Netty"}],["meta",{"property":"article:published_time","content":"2023-11-19T23:50:30.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-03T12:20:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Netty实战专栏 NIO详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-19T23:50:30.000Z\\",\\"dateModified\\":\\"2023-12-03T12:20:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Leo\\",\\"url\\":\\"https://manamn.space/\\"}]}"]]},"headers":[{"level":2,"title":"1.前言","slug":"_1-前言","link":"#_1-前言","children":[]},{"level":2,"title":"2.为什么会有NIO","slug":"_2-为什么会有nio","link":"#_2-为什么会有nio","children":[{"level":3,"title":"2.1 概念解释：","slug":"_2-1-概念解释","link":"#_2-1-概念解释","children":[]},{"level":3,"title":"2.2 IO模型的局限性","slug":"_2-2-io模型的局限性","link":"#_2-2-io模型的局限性","children":[]},{"level":3,"title":"2.3 NIO模型优势","slug":"_2-3-nio模型优势","link":"#_2-3-nio模型优势","children":[]}]},{"level":2,"title":"3.NIO的由来","slug":"_3-nio的由来","link":"#_3-nio的由来","children":[]},{"level":2,"title":"4.NIO和传统的IO有什么区别呢?","slug":"_4-nio和传统的io有什么区别呢","link":"#_4-nio和传统的io有什么区别呢","children":[]},{"level":2,"title":"5.解读NIO","slug":"_5-解读nio","link":"#_5-解读nio","children":[{"level":3,"title":"5.1 流与块","slug":"_5-1-流与块","link":"#_5-1-流与块","children":[]},{"level":3,"title":"5.2 NIO的工作方式","slug":"_5-2-nio的工作方式","link":"#_5-2-nio的工作方式","children":[]},{"level":3,"title":"5.3 NIO的核心实现","slug":"_5-3-nio的核心实现","link":"#_5-3-nio的核心实现","children":[]},{"level":3,"title":"5.4 通道与缓冲区","slug":"_5-4-通道与缓冲区","link":"#_5-4-通道与缓冲区","children":[]},{"level":3,"title":"5.5 缓冲区的数据存取","slug":"_5-5-缓冲区的数据存取","link":"#_5-5-缓冲区的数据存取","children":[]}]},{"level":2,"title":"6.NIO示例","slug":"_6-nio示例","link":"#_6-nio示例","children":[]},{"level":2,"title":"7.参考文献","slug":"_7-参考文献","link":"#_7-参考文献","children":[]},{"level":2,"title":"8.总结","slug":"_8-总结","link":"#_8-总结","children":[]}],"git":{"createdTime":1700409513000,"updatedTime":1701606033000,"contributors":[{"name":"gaoziman","email":"2942894660@qq.com","commits":3}]},"readingTime":{"minutes":17.13,"words":5138},"filePathRelative":"distributed/netty/nio-in-detail.md","localizedDate":"2023年11月20日","copyright":{"author":"LeoJavaer(toleojavaer.cn)","license":"MIT"},"autoDesc":true}');export{e as data};
